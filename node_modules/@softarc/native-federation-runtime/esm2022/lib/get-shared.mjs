const defaultShareOptions = {
    singleton: false,
    requiredVersionPrefix: '',
};
export function getShared(options = defaultShareOptions) {
    const nfc = window;
    const externals = nfc.__NATIVE_FEDERATION__.externals;
    const shared = {};
    const allKeys = [...externals.keys()];
    const keys = allKeys
        .filter((k) => !k.startsWith('/@id/') &&
        !k.startsWith('@angular-architects/module-federation') &&
        !k.endsWith('@'))
        .sort();
    for (const key of keys) {
        const idx = key.lastIndexOf('@');
        const pkgName = key.substring(0, idx);
        const version = key.substring(idx + 1);
        const path = externals.get(key) ?? '';
        const shareObj = {
            version,
            get: async () => {
                const lib = await window.importShim(path);
                return () => lib;
            },
            shareConfig: {
                singleton: options.singleton,
                requiredVersion: options.requiredVersionPrefix + version,
            },
        };
        if (!shared[pkgName]) {
            shared[pkgName] = [];
        }
        shared[pkgName].push(shareObj);
    }
    return shared;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0LXNoYXJlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2xpYnMvbmF0aXZlLWZlZGVyYXRpb24tcnVudGltZS9zcmMvbGliL2dldC1zaGFyZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNEJBLE1BQU0sbUJBQW1CLEdBQWlCO0lBQ3hDLFNBQVMsRUFBRSxLQUFLO0lBQ2hCLHFCQUFxQixFQUFFLEVBQUU7Q0FDMUIsQ0FBQztBQUVGLE1BQU0sVUFBVSxTQUFTLENBQUMsT0FBTyxHQUFHLG1CQUFtQjtJQUNyRCxNQUFNLEdBQUcsR0FBRyxNQUE4QyxDQUFDO0lBQzNELE1BQU0sU0FBUyxHQUFHLEdBQUcsQ0FBQyxxQkFBcUIsQ0FBQyxTQUFTLENBQUM7SUFDdEQsTUFBTSxNQUFNLEdBQWdCLEVBQUUsQ0FBQztJQUUvQixNQUFNLE9BQU8sR0FBRyxDQUFDLEdBQUcsU0FBUyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUM7SUFDdEMsTUFBTSxJQUFJLEdBQUcsT0FBTztTQUNqQixNQUFNLENBQ0wsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUNKLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUM7UUFDdEIsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLHVDQUF1QyxDQUFDO1FBQ3RELENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FDbkI7U0FDQSxJQUFJLEVBQUUsQ0FBQztJQUVWLEtBQUssTUFBTSxHQUFHLElBQUksSUFBSSxFQUFFLENBQUM7UUFDdkIsTUFBTSxHQUFHLEdBQUcsR0FBRyxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNqQyxNQUFNLE9BQU8sR0FBRyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztRQUN0QyxNQUFNLE9BQU8sR0FBRyxHQUFHLENBQUMsU0FBUyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUN2QyxNQUFNLElBQUksR0FBRyxTQUFTLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUV0QyxNQUFNLFFBQVEsR0FBZ0I7WUFDNUIsT0FBTztZQUNQLEdBQUcsRUFBRSxLQUFLLElBQUksRUFBRTtnQkFDZCxNQUFNLEdBQUcsR0FBRyxNQUFPLE1BQWMsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ25ELE9BQU8sR0FBRyxFQUFFLENBQUMsR0FBRyxDQUFDO1lBQ25CLENBQUM7WUFDRCxXQUFXLEVBQUU7Z0JBQ1gsU0FBUyxFQUFFLE9BQU8sQ0FBQyxTQUFTO2dCQUM1QixlQUFlLEVBQUUsT0FBTyxDQUFDLHFCQUFxQixHQUFHLE9BQU87YUFDekQ7U0FDRixDQUFDO1FBRUYsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDO1lBQ3JCLE1BQU0sQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDdkIsQ0FBQztRQUVELE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDakMsQ0FBQztJQUNELE9BQU8sTUFBTSxDQUFDO0FBQ2hCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJ0eXBlIFR5cGU8VD4gPSBuZXcgKCkgPT4gVDtcblxudHlwZSBOYXRpdmVGZWRlcmF0aW9uQ29udGFpbmVyID0ge1xuICBfX05BVElWRV9GRURFUkFUSU9OX186IHtcbiAgICBiYXNlVXJsVG9SZW1vdGVOYW1lczogTWFwPHN0cmluZywgc3RyaW5nPjtcbiAgICBleHRlcm5hbHM6IE1hcDxzdHJpbmcsIHN0cmluZz47XG4gIH07XG59O1xuXG5leHBvcnQgdHlwZSBTaGFyZU9iamVjdCA9IHtcbiAgdmVyc2lvbjogc3RyaW5nO1xuICBzY29wZT86IHN0cmluZztcbiAgZ2V0OiAoKSA9PiBQcm9taXNlPCgpID0+IFR5cGU8dW5rbm93bj4+O1xuICBzaGFyZUNvbmZpZz86IHtcbiAgICBzaW5nbGV0b24/OiBib29sZWFuO1xuICAgIHJlcXVpcmVkVmVyc2lvbjogc3RyaW5nO1xuICB9O1xufTtcblxuZXhwb3J0IHR5cGUgU2hhcmVDb25maWcgPSB7XG4gIFtwa2dOYW1lOiBzdHJpbmddOiBBcnJheTxTaGFyZU9iamVjdD47XG59O1xuXG5leHBvcnQgdHlwZSBTaGFyZU9wdGlvbnMgPSB7XG4gIHNpbmdsZXRvbjogYm9vbGVhbjtcbiAgcmVxdWlyZWRWZXJzaW9uUHJlZml4OiAnXicgfCAnficgfCAnPicgfCAnPj0nIHwgJyc7XG59O1xuXG5jb25zdCBkZWZhdWx0U2hhcmVPcHRpb25zOiBTaGFyZU9wdGlvbnMgPSB7XG4gIHNpbmdsZXRvbjogZmFsc2UsXG4gIHJlcXVpcmVkVmVyc2lvblByZWZpeDogJycsXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0U2hhcmVkKG9wdGlvbnMgPSBkZWZhdWx0U2hhcmVPcHRpb25zKSB7XG4gIGNvbnN0IG5mYyA9IHdpbmRvdyBhcyB1bmtub3duIGFzIE5hdGl2ZUZlZGVyYXRpb25Db250YWluZXI7XG4gIGNvbnN0IGV4dGVybmFscyA9IG5mYy5fX05BVElWRV9GRURFUkFUSU9OX18uZXh0ZXJuYWxzO1xuICBjb25zdCBzaGFyZWQ6IFNoYXJlQ29uZmlnID0ge307XG5cbiAgY29uc3QgYWxsS2V5cyA9IFsuLi5leHRlcm5hbHMua2V5cygpXTtcbiAgY29uc3Qga2V5cyA9IGFsbEtleXNcbiAgICAuZmlsdGVyKFxuICAgICAgKGspID0+XG4gICAgICAgICFrLnN0YXJ0c1dpdGgoJy9AaWQvJykgJiZcbiAgICAgICAgIWsuc3RhcnRzV2l0aCgnQGFuZ3VsYXItYXJjaGl0ZWN0cy9tb2R1bGUtZmVkZXJhdGlvbicpICYmXG4gICAgICAgICFrLmVuZHNXaXRoKCdAJylcbiAgICApXG4gICAgLnNvcnQoKTtcblxuICBmb3IgKGNvbnN0IGtleSBvZiBrZXlzKSB7XG4gICAgY29uc3QgaWR4ID0ga2V5Lmxhc3RJbmRleE9mKCdAJyk7XG4gICAgY29uc3QgcGtnTmFtZSA9IGtleS5zdWJzdHJpbmcoMCwgaWR4KTtcbiAgICBjb25zdCB2ZXJzaW9uID0ga2V5LnN1YnN0cmluZyhpZHggKyAxKTtcbiAgICBjb25zdCBwYXRoID0gZXh0ZXJuYWxzLmdldChrZXkpID8/ICcnO1xuXG4gICAgY29uc3Qgc2hhcmVPYmo6IFNoYXJlT2JqZWN0ID0ge1xuICAgICAgdmVyc2lvbixcbiAgICAgIGdldDogYXN5bmMgKCkgPT4ge1xuICAgICAgICBjb25zdCBsaWIgPSBhd2FpdCAod2luZG93IGFzIGFueSkuaW1wb3J0U2hpbShwYXRoKTtcbiAgICAgICAgcmV0dXJuICgpID0+IGxpYjtcbiAgICAgIH0sXG4gICAgICBzaGFyZUNvbmZpZzoge1xuICAgICAgICBzaW5nbGV0b246IG9wdGlvbnMuc2luZ2xldG9uLFxuICAgICAgICByZXF1aXJlZFZlcnNpb246IG9wdGlvbnMucmVxdWlyZWRWZXJzaW9uUHJlZml4ICsgdmVyc2lvbixcbiAgICAgIH0sXG4gICAgfTtcblxuICAgIGlmICghc2hhcmVkW3BrZ05hbWVdKSB7XG4gICAgICBzaGFyZWRbcGtnTmFtZV0gPSBbXTtcbiAgICB9XG5cbiAgICBzaGFyZWRbcGtnTmFtZV0ucHVzaChzaGFyZU9iaik7XG4gIH1cbiAgcmV0dXJuIHNoYXJlZDtcbn1cbiJdfQ==